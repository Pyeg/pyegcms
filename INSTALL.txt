General:
The content managment system is based on a Djangoproject called "django-cms"
To setup the environment, setuptools and virtualenv must be installed on your system. 

Mostly "setuptools" is already installed on your linux system or look in your repository to check out. 

In case that "setuptools" is not available for your distro, install it manually (as root):

wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python


VirtualEnv:
A virtual environment is a way to run python scripts and installation seperated from a global system. 
This is often useful for seperate projects and that libraries won't affect global installations. 

More information:
http://www.virtualenv.org/en/latest/


(as root) pip install virtualenv


Creating and entering the environment:

(as user)
create the environment
chose a directory where you have user have full read and write access:

/PyENV

change inside and execute: 


virtualenv --no-site-package CMSEnv

and execute:

. /PyENV/CMSEnv/bin/activate

to enter the environment

Install the necessary packages:

To set up "django-cms" follow this guide:

Installing django-cms:
pip install django-cms

Additional (MUST) inside the environment:
pip install mysql-python
pip install pillow


django-tinymce:

Django Tinymce must be installed manually, and doesn't work through pip (even it was written on github). 

download, and unzip in /tmp:

https://github.com/aljosa/django-tinymce/archive/master.zip

in your environment as user:

python setup.py install


Mysql as database was choosen.
To be chosen can be MariaDB or MySQL. 
Mariadb is a powerfull fork of MySQL with full transactions engines. 

More about is:
https://mariadb.com/kb/en/mariadb-documentation/

database name, username and password is: "djangocms"

after creating the datatabase with user and pass enter your virtual environment, change to the pyegcms directory and execute:

python manage.py syncdb
python manage.py migrate

djangocms will create the necessary tables with contents.

after successfully finishing the migration, start the server with:

python manage.py runserver

